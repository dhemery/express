import static org.gradle.api.JavaVersion.VERSION_1_8

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = "com.dhemery"
version = "1.0.0"
archivesBaseName = "expression-kit"

sourceCompatibility = VERSION_1_8
targetCompatibility = VERSION_1_8

def dale = [id: 'dhemery', name: 'Dale H. Emery', vendor: 'dhemery.com', url: 'http://dhemery.com/']
def github = [url: "https://github.com/${dale.id}/${archivesBaseName}", connection: "https://github.com/${dale.id}/${archivesBaseName}.git"]

dependencies {
    compile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile(group: 'junit', name: 'junit', version: '4.12') {
        transitive = false
    }
    testCompile group: 'org.jmock', name: 'jmock-junit4', version: '2.8.1'
}

repositories {
    mavenLocal()
    mavenCentral()
}

javadoc {
    options.tags 'implNote:m:Implementation Note'
    options.tags 'implSpec:m:Implementation Requirements'
}

jar {
    manifest {
        attributes 'Implementation-Title': "${archivesBaseName}",
                'Implementation-Vendor': "${dale.vendor}",
                'Implementation-Version': version
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    if (hasProperty('ossrhUsername') && hasProperty('ossrhPassword')) {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Expression Kit'
                    packaging 'jar'
                    description 'Expressive methods to compose and evaluate conditions'
                    url "${github.url}"

                    scm {
                        connection "${github.connection}"
                        url "${github.url}"
                    }

                    licenses {
                        license {
                            name 'The MIT License (MIT)'
                            url 'http://opensource.org/licenses/MIT'
                        }
                    }

                    developers {
                        developer {
                            id "${dale.id}"
                            name "${dale.name}"
                        }
                    }
                }
            }
        }
    }
}